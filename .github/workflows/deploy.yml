name: 🚀 W3Jverse Multi-Platform Deployment

on:
  push:
    branches: [main, production]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18.18.0'
  W3JVERSE_BRAND: 'true'

jobs:
  # Quality Assurance
  qa:
    name: 🧪 Quality Assurance
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: |
          npm ci --legacy-peer-deps
          npx playwright install --with-deps

      - name: 🔍 Type Check
        run: npm run typecheck

      - name: 🧹 Lint Code
        run: npm run lint

      - name: 🧪 Unit Tests
        run: npm run test:unit

      - name: 🔗 Integration Tests
        run: npm run test:integration

      - name: 🌐 E2E Tests
        run: npm run test:e2e
        env:
          CI: true

      - name: 📊 Test Coverage
        run: npm run test:coverage

      - name: 🔒 Security Audit
        run: npm audit --audit-level moderate

      - name: 📈 Performance Benchmark
        run: npm run lighthouse
        continue-on-error: true

  # Build Application
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: qa
    steps:
      - name: 📚 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: 🏗️ Build Application
        run: npm run build
        env:
          NODE_ENV: production
          W3JVERSE_BRAND: true

      - name: 📦 Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: w3jverse-build
          path: build/
          retention-days: 7

  # Deploy to Vercel
  deploy-vercel:
    name: 🌐 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [qa, build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    environment:
      name: vercel-production
      url: https://w3jverse.vercel.app
    steps:
      - name: 📚 Checkout Repository
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  # Deploy to Netlify
  deploy-netlify:
    name: 🌊 Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [qa, build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    environment:
      name: netlify-production
      url: https://w3jverse.netlify.app
    steps:
      - name: 📚 Checkout Repository
        uses: actions/checkout@v4

      - name: 📥 Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: w3jverse-build
          path: build/

      - name: 🚀 Deploy to Netlify
        uses: netlify/actions/deploy@master
        with:
          publish-dir: build/client
          production-branch: main
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Deploy to Railway
  deploy-railway:
    name: 🚂 Deploy to Railway
    runs-on: ubuntu-latest
    needs: [qa, build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    environment:
      name: railway-production
      url: https://w3jverse.railway.app
    steps:
      - name: 📚 Checkout Repository
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Railway
        uses: bervProject/railway-deploy@v1.2.8
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: w3jverse

  # Deploy to Render
  deploy-render:
    name: 🎨 Deploy to Render
    runs-on: ubuntu-latest
    needs: [qa, build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    environment:
      name: render-production
      url: https://w3jverse.onrender.com
    steps:
      - name: 📚 Checkout Repository
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

  # Deploy to Fly.io
  deploy-flyio:
    name: 🪰 Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [qa, build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    environment:
      name: flyio-production
      url: https://w3jverse.fly.dev
    steps:
      - name: 📚 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🚀 Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  # Post-Deployment Validation
  validate-deployments:
    name: ✅ Validate Deployments
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-netlify, deploy-railway, deploy-render, deploy-flyio]
    if: always()
    steps:
      - name: 🏥 Health Check - Vercel
        run: |
          curl -f https://w3jverse.vercel.app/health || echo "Vercel deployment failed"

      - name: 🏥 Health Check - Netlify
        run: |
          curl -f https://w3jverse.netlify.app/health || echo "Netlify deployment failed"

      - name: 🏥 Health Check - Railway
        run: |
          curl -f https://w3jverse.railway.app/health || echo "Railway deployment failed"

      - name: 🏥 Health Check - Render
        run: |
          curl -f https://w3jverse.onrender.com/health || echo "Render deployment failed"

      - name: 🏥 Health Check - Fly.io
        run: |
          curl -f https://w3jverse.fly.dev/health || echo "Fly.io deployment failed"

      - name: 🚀 Performance Tests
        run: |
          npx lighthouse https://w3jverse.vercel.app \
            --output=html \
            --output-path=./lighthouse-report.html \
            --chrome-flags="--headless --no-sandbox"

      - name: 📊 Upload Performance Report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lighthouse-report.html

  # Notification
  notify:
    name: 📢 Deployment Notification
    runs-on: ubuntu-latest
    needs: [validate-deployments]
    if: always()
    steps:
      - name: 📢 Success Notification
        if: success()
        run: |
          echo "🎉 W3Jverse deployed successfully to all platforms!"
          echo "✅ Vercel: https://w3jverse.vercel.app"
          echo "✅ Netlify: https://w3jverse.netlify.app"
          echo "✅ Railway: https://w3jverse.railway.app"
          echo "✅ Render: https://w3jverse.onrender.com"
          echo "✅ Fly.io: https://w3jverse.fly.dev"

      - name: 🚨 Failure Notification
        if: failure()
        run: |
          echo "❌ W3Jverse deployment failed on one or more platforms"
          echo "Please check the logs and deployment status"